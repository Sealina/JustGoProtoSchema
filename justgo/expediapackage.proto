syntax = "proto3";

package expediapackage;

option java_package = "com.expedia.www.packagefinder.database.exppackage";
option java_outer_classname = "ExpPackageProtos";

message PackageList {
	repeated Package FHPackages = 1;
}

message Package {
	// where
	string cityName = 1;
	string countryName = 2;
	// when
	string fromDate = 3;	// in the format of YYYY-MM-DD
	string toDate = 4;		// same format
	// how much
	double pricePerPerson = 5;
	// hotel details
	string hotelId = 6;
	string hotelName = 7;
	string hotelAddress = 8;
	double latitude = 9;
	double longitude = 10;
	double rating = 11;
	uint32 popularity = 12;
	// flight details
	flight flightdetails = 13;
	// images
	// packageImageURL: "http://media.expedia.com/mobiata/mobile/apps/ExpediaBooking/FlightDestinations/images/[AirportCode].jpg?output-quality=60&output-format=jpeg&downsize=2208px%3A%2A"
	string packageImageURL = 14;
	repeated string cityImageURLs = 15; // not set now, might be hand picked in the future
	repeated string hotelImageURLs = 16;
	string bookingURL = 17;
}

message flight {
	flightLeg originFlightLeg = 1;
	flightLeg returnFlightLeg = 2;
}

message flightLeg {
	string departureAirport = 1;
	string departureAirportCode = 2;
	string departureAirportCity = 3;
	string arrivalAirport = 4;
	string arrivalAirportCode = 5;
	string arrivalAirportCity = 6;
	string departureTime = 7;		// ISO standard: YYYY-MM-DDTHH:mm:SS.sss$(Time Zone) e.g. 2016-12-15T09:30:00.000-06:00
	string arrivalTime = 8;			// Same format
	string flightCarrier = 9;		// e.g. American Airline
	string flightCarrierCode = 10;	// e.g. AA
	string flightLegDuration = 11;	// HH-mm e.g. self.arrivalTime - self.departureTime
	repeated transitFlight transitFlights = 12;
}

message transitFlight {
	string transitAirport = 1;
	string transitAirportCode = 2;
	string transitAirportCity = 3;
	string departureTime = 4;
	string arrivalTime = 5;
	string transitFlightDuration = 6; // HH-mm e.g. self.arrivalTime - self.departureTime
	string transitAirportDuration = 7; // HH-mm e.g. originFlightLeg.transitFlights[0].departureTime - previousFlightLeg.arrivalTime
}
